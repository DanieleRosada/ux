{"version":3,"file":"index.js","sources":["../../src/ux-list.ts","../../src/ux-list-item.ts","../../src/ux-list-theme.ts","../../src/index.ts"],"sourcesContent":["import { customElement, bindable, inlineView } from 'aurelia-templating';\nimport { inject } from 'aurelia-dependency-injection';\nimport { UxComponent, StyleEngine } from '@aurelia-ux/core';\nimport { UxListTheme } from './ux-list-theme';\nimport * as VIEW from './ux-list.html';\n\n@inject(Element, StyleEngine)\n@customElement('ux-list')\n@inlineView(VIEW)\nexport class UxList implements UxComponent {\n  @bindable public theme: UxListTheme;\n  @bindable public type: string;\n\n  constructor(\n    public element: HTMLElement,\n    private styleEngine: StyleEngine) { }\n\n  public bind() {\n    if (this.theme != null) {\n      this.themeChanged(this.theme);\n    }\n\n    this.typeChanged(this.type);\n  }\n\n  public typeChanged(newValue: string, oldValue?: string) {\n    if (typeof oldValue === 'string') {\n      this.element.classList.remove(`ux-list--${oldValue}`);\n    }\n\n    if (typeof newValue === 'string') {\n      this.element.classList.add(`ux-list--${newValue}`);\n    }\n  }\n\n  public themeChanged(newValue: UxListTheme) {\n    if (newValue != null && newValue.themeKey == null) {\n      newValue.themeKey = 'list';\n    }\n\n    this.styleEngine.applyTheme(newValue, this.element);\n  }\n}\n","import { customElement, bindable, inlineView } from 'aurelia-templating';\nimport * as VIEW from './ux-list-item.html';\n\n@customElement('ux-list-item')\n@inlineView(VIEW)\nexport class UxListItem {\n  @bindable public theme = null;\n}\n","import { UxTheme } from '@aurelia-ux/core';\n\nexport class UxListTheme implements UxTheme {\n  public themeKey = 'list';\n\n  public foreground: string;\n  public secondaryForeground: string;\n\n  public background: string;\n}\n","/// <reference path=\"html.d.ts\" />\nimport { FrameworkConfiguration } from 'aurelia-framework';\nimport { UxList } from './ux-list';\nimport { UxListItem } from './ux-list-item';\n\nexport { UxListTheme } from './ux-list-theme';\nexport { UxList, UxListItem };\n\nexport function configure(config: FrameworkConfiguration) {\n  config.globalResources([\n    UxList,\n    UxListItem\n  ]);\n}\n"],"names":["bindable","inject","StyleEngine","customElement","inlineView","VIEW"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAaE,gBACS,OAAoB,EACnB,WAAwB;QADzB,YAAO,GAAP,OAAO,CAAa;QACnB,gBAAW,GAAX,WAAW,CAAa;KAAK;IAEhC,qBAAI,GAAX;QACE,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,EAAE;YACtB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SAC/B;QAED,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAC7B;IAEM,4BAAW,GAAlB,UAAmB,QAAgB,EAAE,QAAiB;QACpD,IAAI,OAAO,QAAQ,KAAK,QAAQ,EAAE;YAChC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,cAAY,QAAU,CAAC,CAAC;SACvD;QAED,IAAI,OAAO,QAAQ,KAAK,QAAQ,EAAE;YAChC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,cAAY,QAAU,CAAC,CAAC;SACpD;KACF;IAEM,6BAAY,GAAnB,UAAoB,QAAqB;QACvC,IAAI,QAAQ,IAAI,IAAI,IAAI,QAAQ,CAAC,QAAQ,IAAI,IAAI,EAAE;YACjD,QAAQ,CAAC,QAAQ,GAAG,MAAM,CAAC;SAC5B;QAED,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;KACrD;IA/BS;QAATA,0BAAQ;yCAA2B;IAC1B;QAATA,0BAAQ;wCAAqB;IAFnB,MAAM;QAHlBC,iCAAM,CAAC,OAAO,EAAEC,gBAAW,CAAC;QAC5BC,+BAAa,CAAC,SAAS,CAAC;QACxBC,4BAAU,CAAC,IAAI,CAAC;OACJ,MAAM,CAiClB;IAAD,aAAC;CAjCD;;;;;;;;;;ICJA;QACmB,UAAK,GAAG,IAAI,CAAC;KAC/B;IADW;QAATJ,0BAAQ;6CAAqB;IADnB,UAAU;QAFtBG,+BAAa,CAAC,cAAc,CAAC;QAC7BC,4BAAU,CAACC,MAAI,CAAC;OACJ,UAAU,CAEtB;IAAD,iBAAC;CAFD;;;ICHA;QACS,aAAQ,GAAG,MAAM,CAAC;KAM1B;IAAD,kBAAC;CAAA;;SCDe,SAAS,CAAC,MAA8B;IACtD,MAAM,CAAC,eAAe,CAAC;QACrB,MAAM;QACN,UAAU;KACX,CAAC,CAAC;CACJ;;;;;;;"}