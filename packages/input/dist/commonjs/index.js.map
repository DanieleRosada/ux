{"version":3,"file":"index.js","sources":["../../src/ux-input.ts","../../src/ux-input-theme.ts","../../src/index.ts"],"sourcesContent":["import { customElement, bindable, inlineView } from 'aurelia-templating';\nimport { DOM } from 'aurelia-pal';\nimport { observable } from 'aurelia-binding';\nimport { inject } from 'aurelia-dependency-injection';\nimport { StyleEngine, UxComponent } from '@aurelia-ux/core';\nimport { UxInputTheme } from './ux-input-theme';\nimport * as VIEW from './ux-input.html';\n\nexport interface UxInputElement extends HTMLElement {\n  value: any;\n}\n\n@inject(Element, StyleEngine)\n@customElement('ux-input')\n@inlineView(VIEW)\nexport class UxInput implements UxComponent {\n  private ignoreRawChanges: boolean;\n\n  @bindable public autofocus = null;\n  @bindable public autocomplete: string;\n  @bindable public disabled: any = false;\n  @bindable public maxlength: number;\n  @bindable public minlength: number;\n  @bindable public min: number;\n  @bindable public max: number;\n  @bindable public readonly: any = false;\n  @bindable public theme: UxInputTheme;\n  @bindable public label: any;\n  @bindable public type: any;\n\n  @observable\n  public rawValue: string = '';\n\n  @observable\n  public focused: boolean = false;\n\n  public value: any;\n  public textbox: HTMLInputElement;\n\n  constructor(private element: UxInputElement, public styleEngine: StyleEngine) {\n    Object.setPrototypeOf(element, uxInputElementProto);\n  }\n\n  public bind() {\n    const element = this.element;\n    const textbox = this.textbox;\n\n    const textboxValue = this.textbox.getAttribute('value');\n    if (textboxValue != null) {\n      this.rawValue = textboxValue;\n    }\n\n    if (this.autofocus || this.autofocus === '') {\n      this.focused = true;\n    }\n\n    if (element.hasAttribute('id')) {\n      const attributeValue = element.getAttribute('id');\n\n      if (attributeValue) {\n        element.removeAttribute('id');\n        textbox.setAttribute('id', attributeValue);\n      }\n    }\n\n    if (element.hasAttribute('placeholder')) {\n      const attributeValue = element.getAttribute('placeholder');\n\n      if (attributeValue) {\n        this.label = attributeValue;\n      }\n    }\n\n    if (element.hasAttribute('step')) {\n      const attributeValue = element.getAttribute('step');\n\n      if (attributeValue) {\n        textbox.setAttribute('step', attributeValue);\n        element.removeAttribute('step');\n      }\n    }\n\n    if ([\n      'text',\n      'password',\n      'number',\n      'email',\n      'url',\n      'tel',\n      'search'\n    ].includes(this.type)) {\n      textbox.setAttribute('type', this.type);\n    }\n\n    if (this.min) {\n      textbox.setAttribute('min', this.min.toString());\n    }\n\n    if (this.max) {\n      textbox.setAttribute('max', this.max.toString());\n    }\n\n    if (this.minlength) {\n      textbox.setAttribute('minlength', this.minlength.toString());\n    }\n\n    if (this.maxlength) {\n      textbox.setAttribute('maxlength', this.maxlength.toString());\n    }\n\n    this.autocompleteChanged(this.autocomplete);\n    this.themeChanged(this.theme);\n  }\n\n  public attached() {\n    this.textbox.addEventListener('change', stopEvent);\n    this.textbox.addEventListener('input', stopEvent);\n  }\n\n  public detached() {\n    this.textbox.removeEventListener('change', stopEvent);\n    this.textbox.removeEventListener('input', stopEvent);\n  }\n\n  public getValue() {\n    return this.value;\n  }\n\n  public setValue(value: any) {\n    const oldValue = this.value;\n    const newValue = this.processRawValue(value);\n\n    if (oldValue !== newValue) {\n      this.value = newValue;\n      this.ignoreRawChanges = true;\n      this.rawValue = newValue === null || newValue === undefined ? '' : newValue.toString();\n      this.ignoreRawChanges = false;\n      this.element.dispatchEvent(DOM.createCustomEvent('change', { bubbles: true }));\n    }\n  }\n\n  private processRawValue(rawValue: string): any {\n    let newValue: any = rawValue;\n    if (this.type === 'number') {\n      newValue = rawValue === '' ? NaN : Number(rawValue);\n      if (isNaN(newValue)) {\n        newValue = null;\n      } else {\n        if (this.min !== undefined && this.min > newValue) {\n          newValue = this.min;\n        }\n        if (this.max !== undefined && newValue > this.max) {\n          newValue = this.max;\n        }\n      }\n    }\n    return newValue;\n  }\n\n  public autocompleteChanged(newValue: any) {\n    if (newValue == null) {\n      this.textbox.setAttribute('autocomplete', newValue);\n    } else {\n      this.textbox.removeAttribute('autocomplete');\n    }\n  }\n\n  public themeChanged(newValue: any) {\n    if (newValue != null && newValue.themeKey == null) {\n      newValue.themeKey = 'input';\n    }\n\n    this.styleEngine.applyTheme(newValue, this.element);\n  }\n\n  public focusedChanged(focused: boolean) {\n    if (focused === true) {\n      this.element.classList.add('ux-input--focused');\n    } else {\n      this.element.classList.remove('ux-input--focused');\n    }\n\n    this.element.dispatchEvent(DOM.createCustomEvent(focused ? 'focus' : 'blur', { bubbles: false }));\n  }\n\n  public typeChanged(newValue: any) {\n    if (newValue !== 'text' && newValue !== 'password' && newValue !== 'number') {\n      this.type = 'text';\n    }\n  }\n\n  public rawValueChanged(newValue: string) {\n    if (newValue.length > 0) {\n      this.element.classList.add('ux-input--has-value');\n    } else {\n      this.element.classList.remove('ux-input--has-value');\n    }\n\n    if (this.ignoreRawChanges) {\n      return;\n    }\n    this.setValue(newValue);\n  }\n\n  public focusInput() {\n    this.textbox.focus();\n  }\n}\n\nfunction stopEvent(e: Event) {\n  e.stopPropagation();\n}\n\nconst getVm = <T>(_: any) => _.au.controller.viewModel as T;\nconst uxInputElementProto = Object.create(HTMLElement.prototype, {\n  value: {\n    get() {\n      return getVm<UxInput>(this).getValue();\n    },\n    set(value: any) {\n      getVm<UxInput>(this).setValue(value);\n    }\n  }\n});\n","import { UxTheme } from '@aurelia-ux/core';\n\nexport class UxInputTheme implements UxTheme {\n  public themeKey = 'input';\n\n  public foreground: string;\n  public foregroundLabel: string;\n  public background: string;\n  public backgroundHover: string;\n\n  public fontSize: string;\n  public letterSpacing: string;\n  public labelFontSize: string;\n  public labelLetterSpacing: string;\n\n  public border: string;\n  public borderHover: string;\n  public borderFocus: string;\n  public borderRadius: string;\n  public borderBottom: string;\n  public borderBottomHover: string;\n  public borderBottomFocus: string;\n\n  public diabledForeground: string;\n  public disabledBackground: string;\n  public disabledBorder: string;\n\n  public error: string;\n}\n","/// <reference path=\"html.d.ts\" />\nimport { FrameworkConfiguration, bindingMode } from 'aurelia-framework';\nimport { ValueAttributeObserver, EventSubscriber } from 'aurelia-binding';\nimport { AureliaUX } from '@aurelia-ux/core';\nimport { UxInput } from './ux-input';\n\nexport { UxInputTheme } from './ux-input-theme';\nexport { UxInput, UxInputElement } from './ux-input';\n\nexport function configure(config: FrameworkConfiguration) {\n  config.container.get(AureliaUX).registerUxElementConfig(uxInputConfig);\n  config.globalResources(UxInput);\n}\n\nconst uxInputConfig = {\n  tagName: 'ux-input',\n  properties: {\n    value: {\n      defaultBindingMode: bindingMode.twoWay,\n      getObserver(element: Element) {\n        return new ValueAttributeObserver(element, 'value', new EventSubscriber(['change']));\n      }\n    }\n  }\n};\n"],"names":["DOM","bindable","observable","inject","StyleEngine","customElement","inlineView","AureliaUX","bindingMode","ValueAttributeObserver","EventSubscriber"],"mappings":"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"}